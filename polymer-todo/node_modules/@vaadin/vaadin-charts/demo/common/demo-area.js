import { PolymerElement } from '@polymer/polymer/polymer-element.js';
import '@polymer/paper-button/paper-button.js';
import { html } from '@polymer/polymer/lib/utils/html-tag.js';
import { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';
import { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';
class DemoArea extends mixinBehaviors([IronResizableBehavior], PolymerElement) {
  static get template() {
    return html`
    <style>
       :host {
        height: 100%;
        width: 100%;
        box-sizing: border-box;
        display: flex;
        justify-content: center;
        background-image: url("../images/empty-background.png");
        background-repeat: repeat;
        background-size: 8px 8px;
      }

    </style>
    <slot id="content"></slot>
`;
  }

  static get is() {
    return 'demo-area';
  }
  static get properties() {
    return {
      header: {
        value: '',
        type: String
      }
    };
  }

  ready() {
    this.addEventListener('iron-resize', this._onIronResize);
    super.ready();
  }

  updateSize() {
    var demo = this.querySelector('vaadin-chart');
    if (demo) {
      demo.__reflow();
    }
  }

  _onIronResize() {
    this.debounce('updateSizeDebounce', this.updateSize, 300);
  }

  connectedCallback() {
    super.connectedCallback();
  }
}
customElements.define(DemoArea.is, DemoArea);
